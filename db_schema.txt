CREATE USER university WITH PASSWORD 'foxminded';

CREATE DATABASE university;

GRANT ALL PRIVILEGES ON DATABASE university TO university;

CREATE TABLE faculties(
faculty_id SERIAL PRIMARY KEY,
faculty_short_name text,
faculty_full_name text);

CREATE TABLE groups(
group_id SERIAL PRIMARY KEY,
group_name text
faculty_id integer REFERENCES faculties(faculty_id) ON DELETE RESTRICT);

CREATE TABLE students(
student_id SERIAL PRIMARY KEY,
first_name text,
last_name text,
group_id integer REFERENCES groups(group_id) ON DELETE RESTRICT);

CREATE TABLE teachers(
teacher_id SERIAL PRIMARY KEY,
first_name text,
last_name text,
faculty_id integer REFERENCES faculties(faculty_id) ON DELETE RESTRICT);

CREATE TABLE courses(
course_id SERIAL PRIMARY KEY,
course_name text,
course_description text
teacher_id integer REFERENCES teachers(teacher_id) ON DELETE RESTRICT);

CREATE TABLE classrooms(
classroom_id SERIAL PRIMARY KEY,
class_number text,
capacity integer);

CREATE TABLE timeslots(
timeslot_id SERIAL PRIMARY KEY,
timeslot_description text);

CREATE TABLE lessons(
lesson_id SERIAL PRIMARY KEY,
lesson_date date NOT NULL,
lesson_timeslot_id integer NOT NULL REFERENCES timeslots(timeslot_id) ON DELETE RESTRICT,
course_id integer NOT NULL REFERENCES courses(course_id) ON DELETE RESTRICT,
classroom_id integer NOT NULL REFERENCES classrooms(classroom_id) ON DELETE RESTRICT,
UNIQUE (lesson_date, lesson_timeslot_id, course_id),
UNIQUE (lesson_date, lesson_timeslot_id, classroom_id));

CREATE TABLE groups_courses(
group_id integer REFERENCES groups(group_id) ON DELETE RESTRICT,
course_id integer REFERENCES courses(course_id) ON DELETE RESTRICT,
PRIMARY KEY (group_id, course_id));